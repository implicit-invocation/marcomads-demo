{"version":3,"sources":["commons/Canvas.js","libs/gdxjs/mathUtils.js","libs/gdxjs/orthoCamera.js","libs/gdxjs/loadTexture.js","libs/gdxjs/TextureRegion.js","libs/gdxjs/loadAtlas.js","libs/gdxjs/createAnimation.js","games/FlappyBird.js","App.js","serviceWorker.js","index.js"],"names":["onInit","onClick","onResize","props","canvasRef","useRef","resizeCanvas","useCallback","canvas","current","displayWidth","clientWidth","displayHeight","clientHeight","width","height","resize","handleClick","evt","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","eventHandlers","useMemo","window","onTouchStart","useEffect","addEventListener","onTeardown","getContext","Promise","resolve","then","removeEventListener","console","log","ref","unproject","out","vec3","invMat4","viewX","viewY","viewWidth","viewHeight","z","mat4","m","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","l_w","project","viewportWidth","viewportHeight","combined","create","ortho","invOrtho","invert","transform","tmp3","origin","scaleVec","negOriginVec","translateVec","setMatrix","mat","copy","unprojectVector2","input","translate","length","scale","originX","originY","identity","mul","gl","url","options","image","Image","src","onload","texture","Texture","setFilter","Filter","LINEAR","TextureRegion","tex","extraData","invTexWidth","invTexHeight","u","v","u2","v2","key","this","batch","rotation","scaleX","scaleY","draw","concatAndResolveUrl","concat","url1","split","url2","url3","i","l","pop","push","join","TextureWrap","packFileUrl","a","fetch","res","text","packFileContent","pages","regionsData","lines","undefined","line","trim","pageImage","file","tuple","map","s","parseInt","format","min","max","direction","repeatX","repeatY","mipMaps","name","rotate","region","page","splits","pads","originalWidth","originalHeight","offsetX","offsetY","index","loadTexture","regions","regionData","getRegions","findRegion","findRegions","filter","sort","b","PlayMode","frameDuration","keyFrames","getKeyFrame","stateTime","mode","frameNumber","Math","floor","FlappyBird","config","characterUrl","characterKey","backgroundUrl","sign01Url","sign02Url","emitter","EventEmitter","onCanvasClick","emit","createSpriteBatch","size","camera","createOrthoCamera","worldWidth","worldHeight","bg","base","pipe","loadAtlas","birdAtlas","sign01","sign02","birdAnimation","createAnimation","viewport","BIRD_WIDTH","UP_ANGLE","PI","BASE_WIDTH","BASE_HEIGHT","PIPE_WIDTH","GAP","vY","baseX","init","obstacles","random","addListener","gameOver","decorated","render","delta","clearColor","clear","COLOR_BUFFER_BIT","pipeX","birdX","obstacle","setProjection","begin","end","running","lastTime","Date","now","loop","requestAnimationFrame","Canvas","useFormData","initialValue","useState","state","setState","value","App","packageInfo","homepage","formData","setFormData","setConfig","style","display","justifyContent","alignItems","minHeight","flexDirection","flexWrap","border","alignSelf","padding","minWidth","onSubmit","e","preventDefault","type","onChange","target","className","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4eab87e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useCallback, useMemo } from 'react';\n\nfunction resize(canvas) {\n  // Lookup the size the browser is displaying the canvas.\n  var displayWidth = canvas.clientWidth;\n  var displayHeight = canvas.clientHeight;\n\n  // Check if the canvas is not the same size.\n  if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n    // Make the canvas the same size\n    canvas.width = displayWidth;\n    canvas.height = displayHeight;\n  }\n}\n\nexport default ({ onInit, onClick, onResize, ...props }) => {\n  const canvasRef = useRef(null);\n  const resizeCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    resize(canvas);\n    onResize && onResize(canvas.width, canvas.height);\n  }, [onResize]);\n\n  const handleClick = useCallback(\n    evt => {\n      const rect = canvasRef.current.getBoundingClientRect();\n      const x = evt.clientX - rect.left;\n      const y = evt.clientY - rect.top;\n\n      onClick && onClick(x, y);\n    },\n    [onClick]\n  );\n\n  const eventHandlers = useMemo(() => {\n    if ('ontouchstart' in window) {\n      return {\n        onTouchStart: handleClick\n      };\n    } else {\n      return {\n        onClick: handleClick\n      };\n    }\n  }, [handleClick]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    const onTeardown =\n      onInit && onInit(canvas.getContext('webgl'), canvas.width, canvas.height);\n    return () => {\n      if (onTeardown) {\n        Promise.resolve(onTeardown).then(onTeardown => onTeardown());\n      }\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, [resizeCanvas, onInit]);\n\n  console.log(eventHandlers);\n\n  return <canvas {...eventHandlers} ref={canvasRef} {...props} />;\n};\n","export const project = (out, vec3, mat4) => {\n  const [x, y, z] = vec3;\n  const m = mat4;\n  const a00 = m[0],\n    a01 = m[1],\n    a02 = m[2],\n    a03 = m[3],\n    a10 = m[4],\n    a11 = m[5],\n    a12 = m[6],\n    a13 = m[7],\n    a20 = m[8],\n    a21 = m[9],\n    a22 = m[10],\n    a23 = m[11],\n    a30 = m[12],\n    a31 = m[13],\n    a32 = m[14],\n    a33 = m[15];\n\n  const l_w = 1 / (x * a03 + y * a13 + z * a23 + a33);\n\n  out[0] = (x * a00 + y * a10 + z * a20 + a30) * l_w;\n  out[1] = (x * a01 + y * a11 + z * a21 + a31) * l_w;\n  out[2] = (x * a02 + y * a12 + z * a22 + a32) * l_w;\n\n  return out;\n};\n\nexport const unproject = (\n  out,\n  vec3,\n  invMat4,\n  viewX,\n  viewY,\n  viewWidth,\n  viewHeight\n) => {\n  let [x, y, z] = vec3;\n  x = x - viewX;\n  y = viewHeight - y - 1;\n  y = y - viewY;\n  out[0] = 2 * x / viewWidth - 1;\n  out[1] = 2 * y / viewHeight - 1;\n  out[2] = 2 * z - 1;\n  return project(out, out, invMat4);\n};\n","import { mat4 } from 'gl-matrix';\nimport { unproject } from './mathUtils';\n\nexport default (width, height, viewportWidth, viewportHeight) => {\n  const combined = mat4.create();\n  mat4.ortho(combined, 0, width, height, 0, 0, 1);\n  const invOrtho = mat4.create();\n  mat4.invert(invOrtho, combined);\n\n  const transform = mat4.create();\n\n  const tmp3 = [0, 0, 0];\n  const origin = [];\n  const scaleVec = [];\n  const negOriginVec = [];\n\n  const translateVec = [];\n\n  return {\n    combined,\n    setMatrix(mat) {\n      mat4.copy(combined, mat);\n      mat4.invert(invOrtho, combined);\n    },\n    unprojectVector2(out, input) {\n      tmp3[0] = input[0];\n      tmp3[1] = input[1];\n      tmp3[2] = 0;\n\n      unproject(tmp3, tmp3, invOrtho, 0, 0, viewportWidth, viewportHeight);\n\n      out[0] = tmp3[0];\n      out[1] = tmp3[1];\n    },\n    resize(width, height) {\n      mat4.ortho(combined, 0, width, height, 0, 0, 1);\n      mat4.invert(invOrtho, combined);\n    },\n    translate(x, y) {\n      translateVec.length = 0;\n      translateVec[0] = x;\n      translateVec[1] = y;\n      translateVec[2] = 0;\n\n      mat4.translate(combined, combined, translateVec);\n      mat4.invert(invOrtho, combined);\n    },\n    scale(originX, originY, scale) {\n      origin.length = 0;\n      origin[0] = originX;\n      origin[1] = originY;\n      origin[2] = 0;\n\n      scaleVec.length = 0;\n      scaleVec[0] = scale;\n      scaleVec[1] = scale;\n      scaleVec[2] = 1;\n\n      negOriginVec.length = 0;\n      negOriginVec[0] = -originX;\n      negOriginVec[1] = -originY;\n      negOriginVec[2] = 0;\n\n      mat4.identity(transform);\n      mat4.translate(transform, transform, origin);\n      mat4.scale(transform, transform, scaleVec);\n      mat4.translate(transform, transform, negOriginVec);\n\n      mat4.mul(combined, combined, transform);\n      mat4.invert(invOrtho, combined);\n    }\n  };\n};\n","import Texture from 'kami-texture';\n\nexport default (gl, url, options) =>\n  new Promise(resolve => {\n    const image = new Image();\n    image.src = url;\n    image.onload = () => {\n      const texture = new Texture(gl, { image });\n      texture.setFilter(Texture.Filter.LINEAR, Texture.Filter.LINEAR, false);\n      resolve(texture);\n    };\n  });\n","export default class TextureRegion {\n  constructor(tex, x, y, width, height, extraData, invTexWidth, invTexHeight) {\n    if (!invTexWidth || !invTexHeight) {\n      invTexWidth = 1 / tex.width;\n      invTexHeight = 1 / tex.height;\n    }\n    const u = x * invTexWidth;\n    const v = y * invTexHeight;\n    const u2 = (x + width) * invTexWidth;\n    const v2 = (y + height) * invTexHeight;\n\n    this.texture = tex;\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.u = u;\n    this.v = v;\n    this.u2 = u2;\n    this.v2 = v2;\n    for (let key in extraData) {\n      this[key] = extraData[key];\n    }\n  }\n\n  draw(\n    batch,\n    x,\n    y,\n    width,\n    height,\n    originX = 0,\n    originY = 0,\n    rotation = 0,\n    scaleX = 1,\n    scaleY = 1\n  ) {\n    batch.draw(\n      this.texture,\n      x,\n      y,\n      width,\n      height,\n      originX,\n      originY,\n      rotation,\n      scaleX,\n      scaleY,\n      this.u,\n      this.v,\n      this.u2,\n      this.v2\n    );\n  }\n}\n","import loadTexture from './loadTexture';\nimport TextureRegion from './TextureRegion';\n\nfunction concatAndResolveUrl(url, concat) {\n  let url1 = url.split('/');\n  let url2 = concat.split('/');\n  let url3 = [];\n\n  for (let i = 0, l = url1.length; i < l; i++) {\n    if (url1[i] === '..') {\n      url3.pop();\n    } else if (url1[i] === '.') {\n      continue;\n    } else {\n      url3.push(url1[i]);\n    }\n  }\n\n  for (let i = 0, l = url2.length; i < l; i++) {\n    if (url2[i] === '..') {\n      url3.pop();\n    } else if (url2[i] === '.') {\n      continue;\n    } else {\n      url3.push(url2[i]);\n    }\n  }\n  return url3.join('/');\n}\n\nconst TextureWrap = {\n  ClampToEdge: 0,\n  Repeat: 1\n};\n\nexport default async (gl, packFileUrl) => {\n  const packFileContent = await fetch(packFileUrl).then(res => res.text());\n\n  const pages = [];\n  const regionsData = [];\n\n  let pageImage;\n\n  const lines = packFileContent.split('\\n');\n\n  let i = 0;\n  let tuple;\n\n  while (true) {\n    let line = lines[i];\n    if (line === undefined) {\n      break;\n    }\n    if (line.trim().length === 0) {\n      pageImage = null;\n    } else if (pageImage === null) {\n      const file = concatAndResolveUrl(packFileUrl, `../${line}`);\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const format = tuple[0];\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const [min, max] = tuple;\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const direction = tuple[0];\n\n      let repeatX = TextureWrap.ClampToEdge;\n      let repeatY = TextureWrap.ClampToEdge;\n\n      if (direction === 'x') {\n        repeatX = TextureWrap.Repeat;\n      } else if (direction === 'y') {\n        repeatY = TextureWrap.Repeat;\n      } else if (direction === 'xy') {\n        repeatX = TextureWrap.Repeat;\n        repeatY = TextureWrap.Repeat;\n      }\n\n      const mipMaps = min !== 'Nearest' && min !== 'Linear';\n\n      pageImage = {\n        file,\n        width,\n        height,\n        format,\n        mipMaps,\n        min,\n        max,\n        direction,\n        repeatX,\n        repeatY\n      };\n      pages.push(pageImage);\n    } else {\n      const name = line;\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const rotate = tuple[0] === 'true';\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const left = parseInt(tuple[0], 10);\n      const top = parseInt(tuple[1], 10);\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      const width = parseInt(tuple[0], 10);\n      const height = parseInt(tuple[1], 10);\n\n      const region = {\n        name,\n        rotate,\n        left,\n        top,\n        width,\n        height,\n        page: pageImage\n      };\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      if (tuple.length === 4) {\n        region.splits = tuple.map(i => parseInt(i, 10));\n\n        i++;\n        line = lines[i];\n        tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n        if (tuple.length === 4) {\n          region.pads = tuple.map(i => parseInt(i, 10));\n\n          i++;\n          line = lines[i];\n          tuple = line.split(':')[1].split(',').map(s => s.trim());\n        }\n      }\n\n      region.originalWidth = parseInt(tuple[0], 10);\n      region.originalHeight = parseInt(tuple[1], 10);\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      region.offsetX = parseInt(tuple[0], 10);\n      region.offsetY = parseInt(tuple[1], 10);\n\n      i++;\n      line = lines[i];\n      tuple = line.split(':')[1].split(',').map(s => s.trim());\n\n      region.index = parseInt(tuple[0], 10);\n\n      regionsData.push(region);\n    }\n    i++;\n  }\n\n  for (let page of pages) {\n    page.texture = await loadTexture(gl, page.file);\n    page.invTexWidth = 1 / page.texture.width;\n    page.invTexHeight = 1 / page.texture.height;\n  }\n\n  const regions = [];\n\n  for (let regionData of regionsData) {\n    const { left: x, top: y } = regionData;\n\n    const width = regionData.rotate ? regionData.height : regionData.width;\n    const height = regionData.rotate ? regionData.width : regionData.height;\n    const { texture, invTexWidth, invTexHeight } = regionData.page;\n\n    regions.push(\n      new TextureRegion(\n        texture,\n        x,\n        y,\n        width,\n        height,\n        regionData,\n        invTexWidth,\n        invTexHeight\n      )\n    );\n  }\n\n  return {\n    getRegions() {\n      return regions;\n    },\n    findRegion(name, index) {\n      for (let i = 0; i < regions.length; i++) {\n        let region = regions[i];\n        if (region.name !== name) continue;\n        if (index !== undefined && region.index !== index) continue;\n        return region;\n      }\n      return null;\n    },\n    findRegions(name) {\n      return regions\n        .filter(region => region.name === name)\n        .sort((a, b) => a.index - b.index);\n    }\n  };\n};\n","export const PlayMode = {\n  NORMAL: 0,\n  LOOP: 1,\n  LOOP_PINGPONG: 2,\n  REVERSED: 3,\n  LOOP_REVERSED: 4\n};\n\n// TODO: dynamic frame duration\nexport default (frameDuration, keyFrames = []) => {\n  return {\n    getKeyFrame(stateTime, mode = PlayMode.NORMAL) {\n      let frameNumber = Math.floor(stateTime / frameDuration);\n      switch (mode) {\n        case PlayMode.NORMAL:\n          frameNumber = Math.min(keyFrames.length - 1, frameNumber);\n          break;\n        case PlayMode.LOOP:\n          frameNumber = frameNumber % keyFrames.length;\n          break;\n        case PlayMode.LOOP_PINGPONG:\n          frameNumber = frameNumber % (keyFrames.length * 2 - 2);\n          if (frameNumber >= keyFrames.length) {\n            frameNumber =\n              keyFrames.length - 2 - (frameNumber - keyFrames.length);\n          }\n          break;\n        case PlayMode.REVERSED:\n          frameNumber = Math.max(keyFrames.length - frameNumber - 1, 0);\n          break;\n        case PlayMode.LOOP_REVERSED:\n          frameNumber = frameNumber % keyFrames.length;\n          frameNumber = keyFrames.length - frameNumber - 1;\n          break;\n        default:\n      }\n      return keyFrames[frameNumber];\n    }\n  };\n};\n","import React, { useCallback, useMemo } from 'react';\nimport Canvas from '../commons/Canvas';\n\nimport createSpriteBatch from 'kami-batch';\nimport createOrthoCamera from '../libs/gdxjs/orthoCamera';\n\nimport loadTexture from '../libs/gdxjs/loadTexture';\nimport loadAtlas from '../libs/gdxjs/loadAtlas';\nimport createAnimation, { PlayMode } from '../libs/gdxjs/createAnimation';\n\nimport { EventEmitter } from 'fbemitter';\n\nconst FlappyBird = ({\n  config = {\n    characterUrl: '/flappy.atlas',\n    characterKey: 'bluebird',\n    backgroundUrl: '/background-day.png',\n    sign01Url: '/sign01.png',\n    sign02Url: '/sign02.png'\n  },\n  ...props\n}) => {\n  const emitter = useMemo(() => new EventEmitter(), []);\n\n  const onCanvasClick = useCallback(\n    (x, y) => emitter.emit('canvasClick', x, y),\n    [emitter]\n  );\n\n  const onInit = useCallback(\n    async (gl, width, height) => {\n      const batch = createSpriteBatch(gl, { size: 1000 });\n\n      const worldWidth = 10;\n      const worldHeight = (worldWidth * height) / width;\n\n      const camera = createOrthoCamera(worldWidth, worldHeight, width, height);\n\n      const bg = await loadTexture(gl, config.backgroundUrl);\n      const base = await loadTexture(gl, '/base.png');\n      const pipe = await loadTexture(gl, '/pipe-green.png');\n      const birdAtlas = await loadAtlas(gl, config.characterUrl);\n\n      const sign01 = await loadTexture(gl, config.sign01Url);\n      const sign02 = await loadTexture(gl, config.sign02Url);\n\n      const birdAnimation = createAnimation(\n        0.1,\n        birdAtlas.findRegions(config.characterKey)\n      );\n\n      gl.viewport(0, 0, width, height);\n\n      const BIRD_WIDTH = 1.2;\n      const BIRD_HEIGHT = (BIRD_WIDTH * 0.24) / 0.34;\n\n      let stateTime = 0;\n\n      const MAX_SPEED = 20;\n      const DECELERATION = 60; // per second\n      const UP_ANGLE = -Math.PI / 6;\n\n      const SPEED_X = 7;\n      const BASE_WIDTH = worldWidth;\n      const BASE_HEIGHT = Math.min(worldWidth / 3, worldHeight / 5);\n\n      const PIPE_WIDTH = 2 * BIRD_WIDTH;\n      const PIPE_HEIGHT = (PIPE_WIDTH * 320) / 52;\n\n      const GAP = 5 * BIRD_HEIGHT;\n\n      let vY = MAX_SPEED;\n      let y = worldHeight / 2;\n\n      let baseX = worldWidth;\n\n      const init = () => {\n        baseX = worldWidth;\n        y = worldHeight / 2;\n        vY = 0;\n        obstacles[0] =\n          Math.random() * (worldHeight - 3 * BASE_HEIGHT) + BASE_HEIGHT;\n        obstacles[1] =\n          Math.random() * (worldHeight - 3 * BASE_HEIGHT) + BASE_HEIGHT;\n      };\n\n      emitter.addListener('canvasClick', (x, y) => {\n        if (gameOver) {\n          gameOver = false;\n          init();\n        }\n        vY = -MAX_SPEED;\n      });\n\n      let gameOver = false;\n\n      let obstacles = [\n        Math.random() * (worldHeight - 3 * BASE_HEIGHT) + BASE_HEIGHT,\n        Math.random() * (worldHeight - 3 * BASE_HEIGHT) + BASE_HEIGHT\n      ];\n\n      let decorated = [false, true];\n\n      const render = delta => {\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        if (!gameOver) {\n          vY += DECELERATION * delta;\n          vY = Math.min(vY, MAX_SPEED);\n          y = y + vY * delta;\n\n          baseX -= SPEED_X * delta;\n          if (baseX <= -worldWidth) {\n            baseX = 0;\n            obstacles[0] = obstacles[1];\n            obstacles[1] =\n              Math.random() * (worldHeight - 3 * BASE_HEIGHT) + BASE_HEIGHT;\n\n            decorated[0] = decorated[1];\n            decorated[1] = Math.random() > 0.7 && obstacles[1] > worldWidth / 2;\n          }\n\n          stateTime += delta;\n\n          if (y > worldHeight - BASE_HEIGHT) {\n            gameOver = true;\n          }\n\n          const pipeX = baseX + BASE_WIDTH * 0.75;\n          const birdX = worldWidth / 4;\n          if (\n            birdX <= pipeX + PIPE_WIDTH / 2 &&\n            birdX >= pipeX - PIPE_WIDTH / 2\n          ) {\n            const obstacle = obstacles[0];\n            gameOver = y > obstacle + GAP / 2 || y < obstacle - GAP / 2;\n          }\n        }\n\n        batch.setProjection(camera.combined);\n        batch.begin();\n        batch.draw(bg, 0, 0, worldWidth, worldHeight);\n\n        for (let i = 0; i < obstacles.length; i++) {\n          batch.draw(\n            pipe,\n            baseX + BASE_WIDTH * 0.75 + BASE_WIDTH * i - PIPE_WIDTH / 2,\n            obstacles[i] + GAP / 2,\n            PIPE_WIDTH,\n            PIPE_HEIGHT\n          );\n          batch.draw(\n            pipe,\n            baseX + BASE_WIDTH * 0.75 + BASE_WIDTH * i - PIPE_WIDTH / 2,\n            obstacles[i] - GAP / 2 - PIPE_HEIGHT,\n            PIPE_WIDTH,\n            PIPE_HEIGHT,\n            PIPE_WIDTH / 2,\n            PIPE_HEIGHT / 2,\n            Math.PI\n          );\n\n          if (decorated[i]) {\n            batch.draw(\n              sign02,\n              baseX +\n                BASE_WIDTH * 0.75 +\n                BASE_WIDTH * i -\n                PIPE_WIDTH / 2 -\n                BIRD_WIDTH * 5,\n              worldHeight / 20,\n              BIRD_WIDTH * 5,\n              BIRD_WIDTH * 2\n            );\n          }\n        }\n\n        if (baseX > 0) {\n          batch.draw(\n            base,\n            baseX - BASE_WIDTH,\n            worldHeight - BASE_HEIGHT,\n            BASE_WIDTH,\n            BASE_HEIGHT\n          );\n        }\n\n        if (\n          baseX - BASE_WIDTH + (BASE_WIDTH * 2) / 3 + (BIRD_WIDTH * 4) / 2 >\n          0\n        ) {\n          batch.draw(\n            sign01,\n            baseX - BASE_WIDTH + (BASE_WIDTH * 2) / 3 - (BIRD_WIDTH * 4) / 2,\n            worldHeight - BASE_HEIGHT - BIRD_WIDTH * 3,\n            BIRD_WIDTH * 4,\n            BIRD_WIDTH * 3\n          );\n        }\n\n        batch.draw(\n          base,\n          baseX,\n          worldHeight - BASE_HEIGHT,\n          BASE_WIDTH,\n          BASE_HEIGHT\n        );\n\n        batch.draw(\n          base,\n          baseX + BASE_WIDTH,\n          worldHeight - BASE_HEIGHT,\n          BASE_WIDTH,\n          BASE_HEIGHT\n        );\n\n        birdAnimation\n          .getKeyFrame(stateTime, PlayMode.LOOP)\n          .draw(\n            batch,\n            worldWidth / 4 - BIRD_WIDTH / 2,\n            y - BIRD_HEIGHT / 2,\n            BIRD_WIDTH,\n            BIRD_HEIGHT,\n            BIRD_WIDTH / 2,\n            BIRD_HEIGHT / 2,\n            vY < 0 ? UP_ANGLE : ((Math.PI / 2) * vY) / MAX_SPEED\n          );\n        batch.end();\n      };\n\n      let running = true;\n      let lastTime = Date.now();\n\n      (function loop() {\n        const delta = Date.now() - lastTime;\n        render(delta / 1000);\n        lastTime = Date.now();\n        running && requestAnimationFrame(loop);\n      })();\n      return () => (running = false);\n    },\n    [emitter, config]\n  );\n\n  return <Canvas {...props} onInit={onInit} onClick={onCanvasClick} />;\n};\n\nexport default FlappyBird;\n","import React, { useState } from 'react';\nimport FlappyBird from './games/FlappyBird';\n\nimport packageInfo from '../package.json';\n\nimport './App.css';\n\nconst useFormData = initialValue => {\n  const [state, setState] = useState(initialValue);\n  return [\n    state,\n    (name, value) =>\n      setState({\n        ...state,\n        [name]: value\n      })\n  ];\n};\n\nfunction App() {\n  const [formData, setFormData] = useFormData({\n    characterUrl: `${packageInfo.homepage}/flappy.atlas`,\n    characterKey: 'bluebird',\n    backgroundUrl: `${packageInfo.homepage}/background-day.png`,\n    sign01Url: `${packageInfo.homepage}/sign01.png`,\n    sign02Url: `${packageInfo.homepage}/sign02.png`\n  });\n\n  const [config, setConfig] = useState(formData);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      }}>\n      <FlappyBird\n        config={config}\n        style={{\n          width: '45vh',\n          height: '90vh',\n          border: 'thin solid #ccc'\n        }}\n      />\n      <div\n        style={{\n          alignSelf: 'self-start',\n          padding: 50,\n          minWidth: '20vw'\n        }}>\n        <form\n          onSubmit={e => {\n            e.preventDefault();\n            setConfig({ ...formData });\n          }}>\n          <div>\n            <label>Background URL:</label>\n            <input\n              type=\"text\"\n              value={formData.backgroundUrl}\n              onChange={e => setFormData('backgroundUrl', e.target.value)}\n            />\n            <div className=\"panel\">\n              <button\n                className=\"link\"\n                onClick={e =>\n                  setFormData(\n                    'backgroundUrl',\n                    `${packageInfo.homepage}/background-day.png`\n                  )\n                }>\n                Use day\n              </button>\n              <button\n                className=\"link\"\n                onClick={e =>\n                  setFormData(\n                    'backgroundUrl',\n                    `${packageInfo.homepage}/background-night.png`\n                  )\n                }>\n                Use night\n              </button>\n              <button\n                className=\"link\"\n                onClick={e =>\n                  setFormData(\n                    'backgroundUrl',\n                    `${packageInfo.homepage}/paris.jpg`\n                  )\n                }>\n                Use Paris\n              </button>\n            </div>\n          </div>\n          <div>\n            <label>Character URL:</label>\n            <input\n              type=\"text\"\n              value={formData.characterUrl}\n              onChange={e => setFormData('characterUrl', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Character key:</label>\n            <input\n              type=\"text\"\n              value={formData.characterKey}\n              onChange={e => setFormData('characterKey', e.target.value)}\n            />\n            <div className=\"panel\">\n              <button\n                className=\"link\"\n                onClick={e => setFormData('characterKey', 'redbird')}>\n                Use red\n              </button>\n              <button\n                className=\"link\"\n                onClick={e => setFormData('characterKey', 'bluebird')}>\n                Use blue\n              </button>\n            </div>\n          </div>\n          <div>\n            <label>Sign 01</label>\n            <input\n              type=\"text\"\n              value={formData.sign01Url}\n              onChange={e => setFormData('sign01Url', e.target.value)}\n            />\n          </div>\n          <div>\n            <label>Sign 02:</label>\n            <input\n              type=\"text\"\n              value={formData.sign02Url}\n              onChange={e => setFormData('sign02Url', e.target.value)}\n            />\n          </div>\n          <button>Preview</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}